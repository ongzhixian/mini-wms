@page
@model Wms.Pages.Bookstore.ReviewModel
@{
    Layout = "Layouts/_DarkBookstore";
    ViewData["Title"] = "Review";
}

<h2>Review page</h2>

<h3>Basics</h3>

<div id="the-basics">
    <input class="typeahead" type="text" placeholder="States of USA">
</div>

<h3>Bloodhound</h3>

<div id="bloodhound">
    <input class="typeahead" type="text" placeholder="States of USA">
</div>


<h3>Test API</h3>

<div id="testapi">
    <input class="typeahead" type="text" placeholder="some values">
</div>

@section Scripts
{
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-typeahead/2.11.0/jquery.typeahead.js"></script>
<script src="/js/typeahead/typeahead.bundle.js"></script>
<script type="text/javascript">
var substringMatcher = function(strs) {
    return function findMatches(q, cb) {
        var matches, substringRegex;

        // an array that will be populated with substring matches
        matches = [];

        // regex used to determine if a string contains the substring `q`
        substrRegex = new RegExp(q, 'i');

        // iterate through the pool of strings and for any string that contains the substring `q`, add it to the `matches` array
        $.each(strs, function(i, str) {
            if (substrRegex.test(str)) {
                matches.push(str);
            }
        });

        cb(matches);
    };
};

var states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',
'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii',
'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',
'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',
'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',
'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',
'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island',
'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',
'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'
];

$('#the-basics .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
}, {
    name: 'states',
    source: substringMatcher(states)
});

// Using Bloodhound

var states2 = new Bloodhound({
    datumTokenizer: Bloodhound.tokenizers.whitespace,
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    // `states` is an array of state names defined in "The Basics"
    local: states
});

$('#bloodhound .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
}, {
    name: 'states',
    source: states2
});

// Using Test API

var countriesMatcher = function(strs) {
    return function findMatches(q, cb) {
        var matches, substringRegex;

        // an array that will be populated with substring matches
        matches = [];

        // regex used to determine if a string contains the substring `q`
        substrRegex = new RegExp(q, 'i');

        // iterate through the pool of strings and for any string that contains the substring `q`, add it to the `matches` array
        $.each(strs, function(i, str) {
            if (substrRegex.test(str)) {
                matches.push(str);
            }
        });

        cb(matches);
    };
};


let timeout;

$('#testapi .typeahead').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
}, {
    name: 'states',
    limit: 5,
    async: true,
    source: function (userInput, processSync, processAsync) {
        //processSync(['This suggestion appears immediately', 'This one too']);

        const later = () => {
            clearTimeout(timeout);
            return $.ajax({
                url: "/api/search/country?q=" + userInput, 
                type: 'GET',
                //data: {query: userInput},
                dataType: 'json',
                success: function (json) {
                    return processAsync(JSON.parse(json));
                }
            });
        };

        clearTimeout(timeout);
        timeout = setTimeout(later, 1000);
    }
});


</script>

}

@section Styles
{
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-typeahead/2.11.0/jquery.typeahead.css" />*@
}